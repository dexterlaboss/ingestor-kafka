name: Build and Release Solana Archival RPC

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # Log in to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push the Docker image with multi-architecture support
      - name: Build and push multi-arch Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            --tag dexterlaboss/archival-rpc:${GITHUB_REF_NAME} \
            --push .

      # Extract x86_64 binary from Docker image
      - name: Extract x86_64 binary from Docker
        run: |
          mkdir -p /output
          docker run --rm \
            --platform linux/amd64 \
            -v ${{ github.workspace }}:/output \
            dexterlaboss/archival-rpc:${GITHUB_REF_NAME} \
            sh -c "ls -l /solana && cp /solana/block-encoder-service /output/block_encoder_service_${GITHUB_REF_NAME}_linux_amd64"

      # Extract arm64 binary from Docker image
      - name: Extract arm64 binary from Docker
        run: |
          mkdir -p /output
          docker run --rm \
            --platform linux/arm64 \
            -v ${{ github.workspace }}:/output \
            dexterlaboss/archival-rpc:${GITHUB_REF_NAME} \
            sh -c "ls -l /solana && cp /solana/block-encoder-service /output/block_encoder_service_${GITHUB_REF_NAME}_linux_arm64"

      # Upload x86_64 binary to GitHub Release
      - name: Upload x86_64 binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.gh-release.outputs.upload_url }}
          asset_path: ./block_encoder_service_${{ github.ref_name }}_linux_amd64
          asset_name: block_encoder_service_${{ github.ref_name }}_linux_amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload arm64 binary to GitHub Release
      - name: Upload arm64 binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.gh-release.outputs.upload_url }}
          asset_path: ./block_encoder_service_${{ github.ref_name }}_linux_arm64
          asset_name: block_encoder_service_${{ github.ref_name }}_linux_arm64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}